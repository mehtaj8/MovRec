{"version":3,"sources":["assets/PopcornMovies.png","components/header/Header.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","assets/footer-bg.jpg","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","ref","className","src","logo","alt","to","map","i","Button","props","onClick","children","OutlineButton","ModalContent","contentRef","parentNode","onClose","Modal","useState","setActive","id","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tmdbApi","getMoviesList","type","url","get","getVideos","cate","search","detail","credits","similar","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","setModalActive","modal","querySelector","videos","results","length","videSrc","key","setAttribute","innerHTML","toggle","style","backgroundImage","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","isActive","MovieCard","link","bg","name","MovieList","items","setItems","getList","getTvList","Home","PageHeader","Input","placeholder","value","onChange","MovieSearch","history","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","casts","setCasts","getCredits","res","cast","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","getDetail","scrollTo","genres","genre","Routes","component","exact","App","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a08b96f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PopcornMovies.d07d44ae.png\";","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nimport logo from '../../assets/PopcornMovies.png';\r\n\r\nconst headerNav = [\r\n    {\r\n        display: 'Home',\r\n        path: '/'\r\n    },\r\n    {\r\n        display: 'Movies',\r\n        path: '/movie'\r\n    },\r\n];\r\n\r\nconst Header = () => {\r\n\r\n    const { pathname } = useLocation();\r\n    const headerRef = useRef(null);\r\n\r\n    const active = headerNav.findIndex(e => e.path === pathname);\r\n\r\n    useEffect(() => {\r\n        const shrinkHeader = () => {\r\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n                headerRef.current.classList.add('shrink');\r\n            } else {\r\n                headerRef.current.classList.remove('shrink');\r\n            }\r\n        }\r\n        window.addEventListener('scroll', shrinkHeader);\r\n        return () => {\r\n            window.removeEventListener('scroll', shrinkHeader);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={headerRef} className=\"header\">\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to=\"/\">PopcornMovies</Link>\r\n                </div>\r\n                <ul className=\"header__nav\">\r\n                    {\r\n                        headerNav.map((e, i) => (\r\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\r\n                                <Link to={e.path}>\r\n                                    {e.display}\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.scss';\n\nconst Button = props => {\n    return (\n        <button\n            className={`btn ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport const OutlineButton = props => {\n    return (\n        <Button\n            className={`btn-outline ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </Button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func\n}\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n","const apiConfig = {\n    baseUrl: 'https://api.themoviedb.org/3/',\n    apiKey: '06f56cfaf9020b41df3b981626532192',\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\n}\n\nexport default apiConfig;","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport apiConfig from './apiConfig';\n\nconst axiosClient = axios.create({\n    baseURL: apiConfig.baseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\n});\n\naxiosClient.interceptors.request.use(async (config) => config);\n\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n\n    return response;\n}, (error) => {\n    throw error;\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n}\r\n\r\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\n\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\n\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './hero-slide.scss';\nimport { useHistory } from 'react-router';\n\nconst HeroSlide = () => {\n\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const params = {page: 1}\n            try {\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1, 4));\n                console.log(response);\n            } catch {\n                console.log('error');\n            }\n        }\n        getMovies();\n    }, []);\n\n    return (\n        <div className=\"hero-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                // autoplay={{delay: 3000}}\n            >\n                {\n                    movieItems.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            {({ isActive }) => (\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\n                            )}\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n            {\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\n            }\n        </div>\n    );\n}\n\nconst HeroSlideItem = props => {\n\n    let hisrory = useHistory();\n\n    const item = props.item;\n\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n    const setModalActive = async () => {\n        const modal = document.querySelector(`#modal_${item.id}`);\n\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n        if (videos.results.length > 0) {\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\n        } else {\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\n        }\n\n        modal.classList.toggle('active');\n    }\n\n    return (\n        <div\n            className={`hero-slide__item ${props.className}`}\n            style={{backgroundImage: `url(${background})`}}\n        >\n            <div className=\"hero-slide__item__content container\">\n                <div className=\"hero-slide__item__content__info\">\n                    <h2 className=\"title\">{item.title}</h2>\n                    <div className=\"overview\">{item.overview}</div>\n                    <div className=\"btns\">\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\n                            Watch now\n                        </Button>\n                        <OutlineButton onClick={setModalActive}>\n                            Watch trailer\n                        </OutlineButton>\n                    </div>\n                </div>\n                <div className=\"hero-slide__item__content__poster\">\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst TrailerModal = props => {\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    const onClose = () => iframeRef.current.setAttribute('src', '');\n\n    return (\n        <Modal active={false} id={`modal_${item.id}`}>\n            <ModalContent onClose={onClose}>\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default HeroSlide;\n","import React from 'react';\n\nimport './movie-card.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst MovieCard = props => {\n\n    const item  = props.item;\n\n    const link = '/' + category[props.category] + '/' + item.id;\n\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\n\n    return (\n        <Link to={link}>\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\n                <Button>\n                    <i className=\"bx bx-play\"></i>\n                </Button>\n            </div>\n            <h3>{item.title || item.name}</h3>\n        </Link>\n    );\n}\n\nexport default MovieCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { OutlineButton } from '../components/button/Button';\r\nimport HeroSlide from '../components/hero-slide/HeroSlide';\r\nimport MovieList from '../components/movie-list/MovieList';\r\n\r\nimport { category, movieType, } from '../api/tmdbApi';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <HeroSlide/>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.popular}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.top_rated}/>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.ac5e7d9c.jpg\";","import React from 'react';\n\nimport './page-header.scss';\n\nimport bg from '../../assets/footer-bg.jpg';\n\nconst PageHeader = props => {\n    return (\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\n            <h2>{props.children}</h2>\n        </div>\n    );\n}\n\n\nexport default PageHeader;\n","import React from 'react';\n\nimport './input.scss';\n\nconst Input = props => {\n    return (\n        <input\n            type={props.type}\n            placeholder={props.placeholder}\n            value={props.value}\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\n        />\n    );\n}\n\nexport default Input;\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport './movie-grid.scss';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Input from '../input/Input'\r\n\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\r\n\r\nconst MovieGrid = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n\r\n    const { keyword } = useParams();\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            if (keyword === undefined) {\r\n                const params = {};\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                }\r\n            } else {\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params});\r\n            }\r\n            setItems(response.results);\r\n            setTotalPage(response.total_pages);\r\n        }\r\n        getList();\r\n    }, [props.category, keyword]);\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n        if (keyword === undefined) {\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            switch(props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n            }\r\n        } else {\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params});\r\n        }\r\n        setItems([...items, ...response.results]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section mb-3\">\r\n                <MovieSearch category={props.category} keyword={keyword}/>\r\n            </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n\r\n    const goToSearch = useCallback(\r\n        () => {\r\n            if (keyword.trim().length > 0) {\r\n                history.push(`/${category[props.category]}/search/${keyword}`);\r\n            }\r\n        },\r\n        [keyword, props.category, history]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const enterEvent = (e) => {\r\n            e.preventDefault();\r\n            if (e.keyCode === 13) {\r\n                goToSearch();\r\n            }\r\n        }\r\n        document.addEventListener('keyup', enterEvent);\r\n        return () => {\r\n            document.removeEventListener('keyup', enterEvent);\r\n        };\r\n    }, [keyword, goToSearch]);\r\n\r\n    return (\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageHeader from '../components/page-header/PageHeader';\r\n\r\nimport { category as cate } from '../api/tmdbApi';\r\nimport MovieGrid from '../components/movie-grid/MovieGrid';\r\n\r\nconst Catalog = () => {\r\n\r\n    const { category } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Movies' : 'Home'}\r\n            </PageHeader>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <MovieGrid category={category}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst CastList = props => {\n\n    const {category} = useParams();\n\n    const [casts, setCasts] = useState([]);\n\n    useEffect(() => {\n        const getCredits = async () => {\n            const res = await tmdbApi.credits(category, props.id);\n            setCasts(res.cast.slice(0, 5));\n        }\n        getCredits();\n    }, [category, props.id]);\n    return (\n        <div className=\"casts\">\n            {\n                casts.map((item, i) => (\n                    <div key={i} className=\"casts__item\">\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\n                        <p className=\"casts__item__name\">{item.name}</p>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default CastList;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './detail.scss';\nimport CastList from './CastList';\nimport VideoList from './VideoList';\n\nimport MovieList from '../../components/movie-list/MovieList';\n\nconst Detail = () => {\n\n    const { category, id } = useParams();\n\n    const [item, setItem] = useState(null);\n\n    useEffect(() => {\n        const getDetail = async () => {\n            const response = await tmdbApi.detail(category, id, {params:{}});\n            setItem(response);\n            window.scrollTo(0,0);\n        }\n        getDetail();\n    }, [category, id]);\n\n    return (\n        <>\n            {\n                item && (\n                    <>\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\n                        <div className=\"mb-3 movie-content container\">\n                            <div className=\"movie-content__poster\">\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`}}></div>\n                            </div>\n                            <div className=\"movie-content__info\">\n                                <h1 className=\"title\">\n                                    {item.title || item.name}\n                                </h1>\n                                <div className=\"genres\">\n                                    {\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\n                                        ))\n                                    }\n                                </div>\n                                <p className=\"overview\">{item.overview}</p>\n                                <div className=\"cast\">\n                                    <div className=\"section__header\">\n                                        <h2>Casts</h2>\n                                    </div>\n                                    <CastList id={item.id}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"section mb-3\">\n                                <VideoList id={item.id}/>\n                            </div>\n                            <div className=\"section mb-3\">\n                                <div className=\"section__header mb-2\">\n                                    <h2>Similar</h2>\n                                </div>\n                                <MovieList category={category} type=\"similar\" id={item.id}/>\n                            </div>\n                        </div>\n                    </>\n                )\n            }\n        </>\n    );\n}\n\nexport default Detail;\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Catalog from '../pages/Catalog';\nimport Detail from '../pages/detail/Detail';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                path='/:category/search/:keyword'\n                component={Catalog}\n            />\n            <Route\n                path='/:category/:id'\n                component={Detail}\n            />\n            <Route\n                path='/:category'\n                component={Catalog}\n            />\n            <Route\n                path='/'\n                exact\n                component={Home}\n            />\n        </Switch>\n    );\n}\n\nexport default Routes;\n","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\nimport './App.scss';\n\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './components/header/Header';\n\nimport Routes from './config/Routes';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Route render={props => (\n                <>\n                    <Header {...props}/>\n                    <Routes/>\n                </>\n            )}/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}